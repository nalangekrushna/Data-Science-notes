Storage

block storage vs Object storage = The key difference between block and object storage systems is the fundamental unit of storage. For block storage, each file (object) being saved to the drive is broken down into “blocks” of a specific size. If you were using 512 byte blocks and had a 10 KB file, you would create 20 blocks worth of drive space. Each block is saved and tracked independently of the others. For object storage, each file is saved as a single object regardless of size. A 10 KB file is saved as a single 10 KB object, and a 30 MB file is saved as a single 30 MB object.
In case of update block storage will only update affected block (default 512 bytes) and in case of object storage prev object will be discarded and complete file will be again uploaded.

object storage has two types 
	hot(S3) = available immediately to download on multiple parallel locations.
	cold(glaciar) = need to wait minimum 3-4 hours before being available.
automatically replicated in multiple availability zones to be fail safe. block storage has no such difference but speed can still be affected by use of magnetic(hard cap 100 IOPS) or SSD (min 3000 IOPS)
In block storage you have to pre-provision the space required by you and in object storage there is no concept of provisioning. your billing starts when you upload the object and stops when you deletes the object.

EFS (Elastic File System) = fully managed file storage service.

Simple Storage Service (Amazon S3) = regionally provisioned object storage service. Content saved into Amazon S3 is automatically replicated into at least three facilities. Buckets are globally unique named objects; they are unique across all AWS accounts. all content in Amazon S3 is automatically web-enabled. When content is saved into Amazon S3, there is a unique URL created for the object, which includes the bucket name as the domain, hence the need for global uniqueness.
Amazon S3 defines a bucket name as a series of one or more labels, separated by periods, which adhere to the following rules:
■ The bucket name can be between 3 and 63 characters long and can contain only lowercase characters, numbers, periods, and dashes.
■ Each label in the bucket name must start with a lowercase letter or number.
■ The bucket name cannot contain underscores, end with a dash, have consecutive periods, or use dashes adjacent to periods.
■ The bucket name cannot be formatted as an IP address (198.51.100.24).

Amazon S3 supports both virtual-hosted-style and path-style URLs to access a bucket.
■ In a virtual-hosted-style URL, the bucket name is part of the domain name in the URL. For example: http://bucket.s3.amazonaws.com or http://bucket.s3-aws-region.amazonaws.com
In a virtual hosted-style URL, you can use either of these endpoints. If you make a request to the http://bucket.s3.amazonaws.com endpoint, the DNS has sufficient information to route your request directly to the region where your bucket resides.
■ In a path-style URL, the bucket name is not part of the domain (unless you use a region-specific endpoint). For example: US East (N. Virginia) region endpoint, h ttp://s3.amazonaws.com/bucket
■ Region-specific endpoint, http://s3-aws-region.amazonaws.com/bucket In a path-style URL, the endpoint you use must match the region in which the bucket resides. For example, if your bucket is in the South America (São Paulo) region, you must use the http://s3-sa-east-1.amazonaws .com/bucket endpoint. If your bucket is in the US East (N. Virginia) region, you must use the http://s3.amazonaws.com/bucket endpoint.

Default properties of Amazon S3 keep content private for the account owner until explicit commands to share are invoked.

Amazon S3 – Reduced Redundancy Storage (Amazon S3-RRS) = only backed up in two place and provide durability upto only 4 points. it is your option when questions looking for cheapest solution and does not mention about duarability or where data can be reproduced from some way.

Amazon S3 Infrequent Access (Amazon S3-IA) = high durablity but if only needed to access two times a month. Exam questions that specifically call out objects that are only accessed once a month or less than 20 times a year should most likely be addressed with Amazon S3-IA.

an additional attribute of Amazon S3-IA is minimum file size (128 KB). Standard Amazon S3 has no file size minimum—a 4 KB file in Amazon S3 is only billed for the 4 KB space. The same 4 KB file stored in Amazon S3-IA would be billed at 128 KB, so even if Amazon S3-IA was normally half the cost of regular Amazon S3, in this edge case, Amazon S3-IA would be 16 times the cost of storing the same 4 KB file in Amazon S3. If the exam question specifically mentioned tiny files (less than 64 KB in size), that would be a signal not to choose Amazon S3-IA as the cost-effective answer.

The other edge case, where Amazon S3-IA is not the best answer, is when files are only stored for a few days. Amazon S3-IA has a minimum 30-day storage time. Content stored for one week is still billed for the entire month.

After you enable versioning on a bucket, it can be in either the enabled or suspended state; you cannot disable versioning on a bucket. If you suspend versioning, Amazon S3 suspends the creation of object versions for all operations but preserves any existing object versions.

Amazon Glacier = In all S3 cases high availability was necessary. when high availability is not needed then you should use glacier.Archives stored in Amazon Glacier are immutable (that is, archives can be uploaded and deleted but cannot be edited or overwritten).

AWS Storage Gateway = AWS Storage Gateway allows existing on-premises storage solutions to be extended into AWS. By installing a virtual appliance in the local datacenter, storage can be duplicated or extended into the AWS Region.

AWS Storage Gateway Options = 
1. file interface = The first option is called the file interface. This enables you to use Amazon S3 with your on-premises workflows by accessing the Amazon S3 bucket through a Network File System (NFS) mount point. This allows customers to migrate their files into Amazon S3 through object-based workloads while maintaining their on-premises investments.
2. volume interface = The second option is the volume interface. In this case, you are presented with an iSCSI block storage endpoint. Data is accessed on the local volumes, which is then stored on AWS in the form of Amazon EBS snapshots. 
	There are two configuration modes using the volume interface. The cached mode is designed to extend your local storage. All content is saved in AWS, and only the frequently accessed data is cached locally. This is an excellent operational solution for on-premises storage solutions that are exceeding their local capacity limits. The other mode is the stored mode, which is a one-to-one backup of all local content on AWS. This is a primary solution when durable and inexpensive off-site backups are needed. The third option for AWS Storage Gateway is the tape interface. In this configuration, you connect to your existing backup application using an iSCSI Virtual Tape Library (VTL). These virtual tapes are then asynchronously stored in Amazon S3 or Amazon Glacier if less expensive, longer-term storage is needed.
	
AWS Snowball = a physically hardened, secure appliance that ships directly to your on-premises location.