# starting code
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
import warnings

warnings.filterwarnings("ignore")
import logging
import pandas as pd
import numpy as np

# label encoder
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
for i in range(df.shape[1]) :
    if(df[df.columns[i]].dtypes == 'O') :
        le.fit(df[df.columns[i]]);
        df[df.columns[i]] = le.transform(df[df.columns[i]]) 
		
# test train split
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=123,shuffle=False)

# for train test and cross-validation 
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=123)
x_train, x_val, y_train, y_val = train_test_split(x_train, y_train, test_size=0.25, random_state=123)

#  text preprocessing
train1['Summary'] = train1['Summary'].str.replace(pat='<.*?>',repl='')
train1['Summary'] = train1['Summary'].str.replace('[\']+', '')   # order matters    single quotations without space
train1['Summary'] = train1['Summary'].str.replace('[\W\s\"]+', ' ')   # all other punctuations with space.
train1['Summary'] = train1['Summary'].str.replace('\d+', '')
train1['Summary'] = train1['Summary'].str.replace(r'\s\s+',' ')
train1['Summary'] = train1['Summary'].str.findall('\w{3,}').str.join(' ')
train1['Summary'] = train1['Summary'].str.lower()
train1['Summary'] = train1['Summary'].apply(lambda x : ' '.join([item for item in x.split() if item not in stop]))
train1['Summary'] = train1['Summary'].apply(lambda x: [sno.stem(y) for y in x.split()])

progress bar
from tqdm.notebook import tqdm

python
	all imports should be in one place
	all hard-coded value should be kept in dict at the top.
	All file paths must be compatible in windows and linux and must be absolute.
	Naming conventions :
		all constansts should be in caps.
		dict naming should be key_value and if needed as dict suffix.
		add plural forms in words to indicate list
	use logger instead of print statements.	and shoould be in file and stdout.
