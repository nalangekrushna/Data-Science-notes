File Systems

what is file ?
a file is a contiguous set of bytes used to store data. This data is organized in a specific format and can be anything as simple as a text file or as complicated as a program executable. 
Files on most modern file systems are composed of three main parts:
	Header: metadata about the contents of the file (file name, size, type, and so on)
	Data: contents of the file as written by the creator or editor
	End of file (EOF): special character that indicates the end of the file
	
File Paths : Itâ€™s broken up into three major parts:
	Folder Path: the file folder location on the file system where subsequent folders are separated by a forward slash / (Unix) or backslash \ (Windows)
	File Name: the actual name of the file
	Extension: the end of the file path pre-pended with a period (.) used to indicate the file type
	
Also by default use Unicode(UTF-8) character encoding as ASCII is subset of unicode.

In python use method file.read() to read complete file instead of file.readlines().


difference between windows and linux/mac ?
windows used CR+LF(\r\n) Carriage Return as line ending. linux uses only LF(\n) Line Feed as end of line.
for EOF (End of File) windows uses 26 while linux uses 4.

There are three types of file objects.
	1. text files = 
	2. buffered binary file = A buffered binary file type is used for reading and writing binary files.
	3. raw file = generally used as a low-level building-block for binary and text streams. It is therefore not typically used.
Tricks
__file__ will give relative file path.
you can open multiple files 
	with open(file1) as f1, open(file2) as f2 : 