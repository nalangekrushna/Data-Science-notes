terraform blocks

.terraform.lock.hcl file should be included in version control. As lock file contains exact version of providers(plugins) that can be useful to reproduce the environment. Currently tf don't track modules (groups of terraform configuration construct). This file is stored in root module (where we run tf commands) and applicable to root module as well as all sub-modules.

.terraform directory contains all the downloaded modules and providers. This directory should be ignored in version control.

terraform State = tf stores information about infrastructure in a state file. This state file keeps track of resources created by your config and maps them to real world resources. By default tf creates a terraform.tfstate file locally and stores it there. This file should be ignored in git as it can contain your passwords and secrets. the best practise is to use terraform remote state with encryption enabled at transit and rest. 
There are following issues with storing terraform state file in version control
	1. If you forget to commit and push changes after running tf apply, your team mates will have out of sync tfstate file.
	2. Also two team mates can run terraform at same time and overwrite each others changes.
	3. Also tfstate file may also contains secrets like aws_db_instance password.

terraform.tfstate.backup = By default a backup of your state file is writtern to terraform.tfstate.backup in case of state file is lost or corrupted to simplify the recovery. Every time you run tf apply it will create a new terraform.tfstate file and rename old file to terraform.tfstate.backup . This file also should be ignored in version control.

tfplan = This file contains execution plan to update resources. This file can be generated by using tf apply -out=./tfplan command. This file should be ignored in vcs.

tf workspaces = tf workspaces works differently in CLI and tf cloud. tf workspaces are required in cloud while they are optional in cli. Also cli creates a workspace named "default" by default. Workspaces can be used have different instances of tfstate with same config. workspaces can be used to test new infrastructure before going live on prod.

tf backends = Supported backend types are S3, artifactory, terraform enterprise and consul.

variable "example" {} is a valid variable config.