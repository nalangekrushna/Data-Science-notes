Jenkins practical guide

to avoid updating installing jenkins every time use docker or kubernetes. 
For simplicity currently we are going to use docker, kubernetes is better for production uses. Jenkins also provide kubernetes operator which is better option, here we are just trying to learn. For production use kubernetes with operator.

notes are taken from below link
https://www.jenkins.io/doc/book/installing/docker/

1. pull the latest image from dockerhub
docker pull jenkins/jenkins:lts-jdk11		# long term support with jdk-11 based on debian-10

2. create a bridge network in docker 
docker network create Jenkins 				# bridge network named jenkins

3. run a docker container (inside it we will run jenkins in docker in docker mode.)
docker run --name jenkins-docker --rm -d \
  --privileged --network jenkins --network-alias docker \
  --env DOCKER_TLS_CERTDIR=/certs \
  --volume jenkins-docker-certs:/certs/client \
  --volume jenkins-data:/var/jenkins_home \
  --publish 2376:2376 docker:dind --storage-driver overlay2

4. create a customized official jenkins dockerfile.
FROM jenkins/jenkins:lts-jdk11
USER root
RUN apt-get update && apt-get install -y apt-transport-https ca-certificates curl gnupg2 \ software-properties-common
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
RUN apt-key fingerprint 0EBFCD88
RUN add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian \
       $(lsb_release -cs) stable"
RUN apt-get update && apt-get install -y docker-ce-cli
USER jenkins
RUN jenkins-plugin-cli --plugins "blueocean:1.24.6 docker-workflow:1.26"

5. build above created file.
docker build -t myjenkins .

6. run above built image inside docker dind using below command

docker run \
--name jenkins-dind \
--rm \
--detach \
--network jenkins \
--env DOCKER_HOST=tcp://docker:2376 \
--env DOCKER_CERT_PATH=/certs/client \
--env DOCKER_TLS_VERIFY=1 \
--publish 8080:8080 \
--publish 50000:50000 \
--volume jenkins-data:/var/jenkins_home \
--volume jenkins-docker-certs:/certs/client:ro \
myjenkins

7. get initial admin password
sudo docker exec ${CONTAINER_ID or CONTAINER_NAME} cat /var/jenkins_home/secrets/initialAdminPassword

8. create admin user and you're done.

how to modify Dockerfile to pre-install required plugins.