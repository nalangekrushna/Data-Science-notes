python tuple = A tuple is a ordered collection of object. tuple is immutable meaning tuple itself cannot be modified but objects referenced by it can be modified.
If tuple has immutable field like string then it cannot be modified but if tuple has mutable object like list then it can be modified. when python documents says immutable this means the above.
for detailed explaination see link below
https://stackoverflow.com/q/9755990/8144864

to define a singleton tuple, include a trailing comma (,) just before the closing parenthesis.
e.g.
t1 = (1,2,3,[1,2])
t1[-1].append(3)
print(t1)
>> (1,2,3,[1,2,3])

list vs tuple
lists are mutable							tuples are immutable
iterations are relatively time consuming    iterations are relatively faster than list
used for insertion and deletion				used for accessing elements
list consumes more memory					tuples consume less memory
lists have many methods						tuples have few methods.
In conclusion if you don't need to edit elements after initializing use tuple otherwise use list.

__repr__ and __str__ = you can implement this both methods in python for object representation. 
__str__ = should be easy to understand and for general user. Print will show this.
__repr__ = should be unambigous and for developers use. just passing object name on interpreter should show this. In case of __str__ not available for print method it will fallback on __repr__. but vice versa is not true(ie. if you only define __str__ inspect value will not shown from __str__ method.)

pprint = you can use from pprint import pprint to import this method which will show arbitary data in proper formatted way.